
from gopigo import *
import time
from math import cos, sin
#import matplotlib.pyplot as plt

def move(d1, d2, sumy):
    global tf
    tf = 0
    while True:
        fwd()
        time.sleep(0.3)
        tf += 1
        if d1 != 700:
           sumy += 0.3*14.4
        #print(sumy)
        stop()
        y = sumy
        X.append(x)
        Y.append(y)
        U.append(0)
        V.append(1)
        if sumy >= 150.0:
           #plt.plot(listx,listy)
           #plt.show()

           print "\nlist1 =", X

           print "\nlist2 =", Y

           print "\nlist3 =", U

           print "\nlist4 =", V

           print "\nlist5 =", ox

           print "\nlist6 =", oy

           exit()
        d = us_dist(15)
        while ( d == 0):
            d = us_dist(15)
        if (d<20):
            ox.append(x)
            oy.append(y)
        if d< d1 and d>d2:
            break
        if sum <= 0:
            if ((y_prev - sumy)**2**0.5)<3:
                print "ROBOT TRAPPED"
                exit()
            break

def turn_left():
    while True:
        left()
        time.sleep(0.03)
        tl += 0.02
        stop()
        d =us_dist(15)
        while (d == 0):
            d = us_dist(15)
        if d >25:
            break

def turn_right(tr):
    while True:

        right()
        time.sleep(0.1)
        tr += 0.1
        stop()
        d = us_dist(15)
        while (d == 0):
            d = us_dist(15)


        if d<20:
            ox.append(x)
            oy.append(y)
            break
    return tr

def main():
    global X
    global Y
    global U
    global V
    global x
    global y
    global u
    global v
    global ox
    global oy
    global y_prev
    X=[]
    Y=[]
    U=[]
    V=[]
    ox = []
    oy = []
    x = 0
    y = 0
    u = 0
    v = 1
    X.append(x)
    Y.append(y)
    U.append(u)
    V.append(v)


    sumy = 0.0

    while sumy < 150:
        servo(90)
        move(10, 0,sumy)
        #sumy +=tf*0.3*10.4
        y_prev = sumy
        left_rot()
        time.sleep(0.79)
        stop()
        X.append(x)
        Y.append(y)
        U.append(-1)
        V.append(0)
        servo(0)
        tr = 0.0
        tl = 0
        sum = 0.0
        n = 0

        while True:
            move(700, 20, sumy)

            sum += tf*cos(tr * (3.14/(3.6)))
            x = -sum
            u = cos(tr*(3.14/(3.6)))
            sumy+= tf*sin(tr*(3.14/3.6))*0.3*14.4
            y = sumy
            v = sin(tr*(3.14/3.6))
            #print 'angle', tr *(3.14/(3.5))
            # print 'sum', sumy
            X.append(x)
            Y.append(y)
            U.append(u)
            V.append(v)
            tr = turn_right(tr)
            n += 1
            print 'tr', tr
            if tr*(3.14/3.6) > 6.28:
                print('trapped')
                exit()
            if sum <= 0:
                left()
                time.sleep((tr-(0.828*tr)))
                stop()
                break




if __name__ == "__main__":
        main()


"""
#the following is the script run to plot the data
import matplotlib.pyplot as plt
import numpy as np

#list1 for x coor
#list2 for y coor
#list3 for x_component of ploted vector , direction determined by the angles 
#list4 for y_component of ploted vector
#list5 for x_coor of object 
#list6 for y_coor of object 

list1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2.0, -2.0, -2.0, -3.8128024976402397, -3.8128024976402397, -3.8128024976402397, -5.345346282576838, -5.345346282576838, -5.845805971585044, -5.845805971585044, -5.845805971585044, -5.845805971585044, -6.368841650706732, -6.368841650706732, -6.368841650706732, -6.196204963715413, -6.196204963715413, -6.196204963715413, -5.513994184443533, -5.513994184443533, -5.513994184443533, -5.513994184443533, -3.5882760579214326, -3.5882760579214326, -2.6490685738401623, -2.6490685738401623, -2.6490685738401623, -2.6490685738401623, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614, 0.35092762134245614]

list2 = [0, 4.32, 8.64, 12.96, 17.28, 21.6, 25.92, 30.240000000000002, 34.56, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.6496895709006556, 3.6496895709006556, 3.6496895709006556, 9.201031687419832, 9.201031687419832, 12.94111419402676, 12.94111419402676, 12.94111419402676, 12.94111419402676, 25.702626482119122, 25.702626482119122, 25.702626482119122, 34.310378601476614, 34.310378601476614, 34.310378601476614, 42.43219511865101, 42.43219511865101, 42.43219511865101, 42.43219511865101, 52.36970671928478, 52.36970671928478, 53.852979218445256, 53.852979218445256, 53.852979218445256, 53.852979218445256, 53.87362000024291, 58.19362000024291, 62.51362000024291, 66.83362000024292, 71.15362000024291, 75.4736200002429, 79.7936200002429, 84.11362000024289, 88.43362000024288, 92.75362000024288, 97.07362000024287, 101.39362000024286, 105.71362000024286, 110.03362000024285, 114.35362000024284, 118.67362000024283, 122.99362000024283, 127.31362000024282, 131.63362000024281, 135.9536200002428, 140.2736200002428, 144.5936200002428, 148.9136200002428, 153.23362000024278]

list3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 1.0, 0, 0, 0.90640124882012, 0, 0, 0.7662718924682989, 0, 0.5004596890082058, 0, 0, 0, 0.17434522637389596, 0, 0, -0.08631834349565917, 0, 0, -0.3411053896359404, 0, 0, 0, -0.6419060421740334, 0, -0.9392074840812702, 0, 0, 0, -0.9999987317275395, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

list4 = [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0.0, 1, 1, 0.42241777440979805, 1, 1, 0.6425164486712008, 1, 0.8657598394923444, 1, 1, 1, 0.9846845901305834, 1, 1, 0.9962676064071166, 1, 1, 0.9400250598581472, 1, 1, 1, 0.7667833025180375, 1, 0.3433501155464062, 1, 1, 1, 0.001592652916485496, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]

list5 = [0, 0, 0, 0, -2.0, -2.0, -3.8128024976402397, -3.8128024976402397, -5.345346282576838, -5.845805971585044, -5.845805971585044, -6.368841650706732, -6.196204963715413, -5.513994184443533, -5.513994184443533, -3.5882760579214326, -2.6490685738401623, -2.6490685738401623, -2.6490685738401623, 0.35092762134245614]

list6 = [21.6, 25.92, 30.240000000000002, 34.56, 0.0, 0.0, 3.6496895709006556, 3.6496895709006556, 9.201031687419832, 12.94111419402676, 12.94111419402676, 25.702626482119122, 34.310378601476614, 42.43219511865101, 42.43219511865101, 52.36970671928478, 53.852979218445256, 53.852979218445256, 53.852979218445256, 53.87362000024291]


plt.scatter(list5,list6,s=70,c="r")
plt.quiver(list1,list2,list3,list4,1)

plt.xlim([-70,70])
plt.ylim([0,100])
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Robot Trajectory')
plt.grid(True)
plt.savefig("test.png")
plt.show()


"""

